============================================================================
	  _________      .__               .___    .__
	 /   _____/ ____ |  |__   ____   __| _/_ __|  |   ____
	 \_____  \_/ ___\|  |  \_/ __ \ / __ |  |  \  | _/ __ \
	 /        \  \___|   Y  \  ___// /_/ |  |  /  |_\  ___/
	/_______  /\___  >___|  /\___  >____ |____/|____/\___  >
	        \/     \/     \/     \/     \/               \/
	                   .___
	_____    ____    __| _/
	\__  \  /    \  / __ |
	 / __ \|   |  \/ /_/ |
	(____  /___|  /\____ |
	     \/     \/      \/
	________                                   .___
	\______ \   ____ ______   ____   ____    __| _/
	 |    |  \_/ __ \\____ \_/ __ \ /    \  / __ | 
	 |    `   \  ___/|  |_> >  ___/|   |  \/ /_/ | 
	/_______  /\___  >   __/ \___  >___|  /\____ | 
	        \/     \/|__|        \/     \/      \/  
==============================================================================
AUTHOR:  SIAVOOSH PAYANDEH AZAD
DATE:    MAY 2015
LICENSE: GNU GENERAL PUBLIC LICENSE Version 2
PYTHON VER: 2.6.9
THE GOAL OF THIS PROGRAM IS TO MAKE A PLATFORM FOR TESTING SOME DEPENDABILITY 
MECHANISMS ON DIFFERENT ARCHITECTURES....
Copyright (C) 2015 Siavoosh Payandeh Azad
===============================================================================
Some of the features:
* Task graph can be manually fed or generated by the tool.
    * Automatically inserting gateways between hard and soft real time tasks
    * Supports Slack insertion for hard real time..
* Provides very basic task clustering
* The Architecture graph can be inserted manually or generated by the tool
    * we support partitioning of the network for hard real time tasks...
* The tool supports: Ring,Line, 2D Mesh and Torus topologies
* The tool generates Visualizations of:
    * Task Graph (TG)
    * Architecture Graph (AG)
    * Clustered Task Graph (CTG)
    * Scheduling Gantt charts (Scheduling)
    * Routing Graph (RG)
* The tool provides some very basic mapping scheduling including:
    * Local search, iterative local search,
    * Min-Min, Max-Min,
    * Minimum Completion Time,
    * Minimum Execution Time
* Has the System Health Management unit implemented and supports broken links,
  turns, nodes and also aging nodes...
    * Supports event driven fault handling
    * Supports transient/permanent faults
* Supports any turn model based routing algorithm, routers can be programmed
  individually by user
* Supports reach-ability calculations based on NoCDepend methodology (for
  deterministic and adaptive, minimal and non minimal path routing algorithms)
* Supports Reach-ability calculation for network partitioning based on NoCDepend
  Methodology and routing based on the reachability calculations for partitioned
  network.
* Calculates Network partitioning based on NoCDepend methodology
* Generates GSNoC simulator readable traffic filesâ€¦
* Provides heavy logging for debugging
===============================================================================
Libraries needed:
    * networkx:     https://networkx.github.io/
    * matplotlib:   http://matplotlib.org/
===============================================================================
How To generate RoutingFile.txt:
    This file is made to enable user to manually control routing algorithm
    via turn model in every single router.
    This file starts with the following 2 lines:
        Ports:
	        N W L E S
	This will show what are the allowed ports in the network.
	Important note: Make sure that the Local is in the middle, and opposite
	directions should have same distance from local. This would be used to
	construct the direct paths in the router.
	And then the user can push the turns for each router by the following
	structure:
        Node 0:
	        N2E E2N
	These would be the allowed turns on router 0.
	The path to file should be specified in Config file by setting
	RoutingFilePath properly.

	** IMPORTANT NOTE:: If the user doesnt specify the turns for a router,
	the router can NOT route in any direction.
===============================================================================
Project Directory Map:

ScheduleAndDepend
 |
 |------ArchGraphUtilities
 |          |
 |          |------- AG_Functions
 |          |------- Arch_Graph_Reports
 |          |------- AG_Test
 |
 |------Clusterer
 |          |
 |          |------- Clustering
 |          |------- Clustering_Functions
 |          |------- Clustering_Test
 |
 |------ConfigAndPackages
 |          |
 |          |------- Config
 |          |------- PackageFile
 |
 |------Generated_Files
 |------GraphDrawings
 |------LOGS
 |------Mapper
 |          |
 |          |------------------- Mapping_Heuristics
 |          |                           |
 |          |                           |------- GeneticsAlgorithm
 |          |                           |------- Local_Search
 |          |----- Mapping              |------- SimpleGreedy
 |          |----- Mapping_Functions    |------- SimulatedAnnealing
 |
 |------RoutingAlgorithms
 |          |
 |          |----- Calculate_Reachability
 |          |----- ReachabilityReports
 |          |----- Routing
 |          |----- Reachability_Test
 |
 |------Scheduler
 |          |
 |          |----- Scheduler
 |          |----- Scheduling_Functions
 |          |----- Scheduling_Reports
 |          |----- TrafficTableGenerator
 |
 |------SystmHealthMonitoring
 |          |
 |          |----- SystemHealthMonitor
 |          |----- SHM_Reports
 |          |----- SHM_Functions
 |
 |------TaskGraphUtilities
 |          |
 |          |----- Task_Graph_Reports
 |          |----- TG_Functions
 |
 |------UserInputs
 |          |
 |          |----- RoutingFile
 |
 |------Utilities
 |          |
 |          |----- Logger
 |          |----- misc
 |
 |-- Main
 |-- SystemInitialization

===============================================================================

ToDo:

    - At the moment thinking about a better name and a better logo for the project

    - I want to run a reliability Analysis of the system... so we can have
      a sense about the system state...

    - can we generate some file based on scheduling to feed in Noxim?

    - can we get TG specifications automatically from some benchmark alg??

    - Generate multiple levels of priority levels for Non/Mid-critical tasks

    - going 3D

    - Simulated annealing and Genetics Algorithm for Mapping

    - Support for adaptive routing! but have to solve some scheduling issues... 
      have no idea how to schedule on multiple paths... should be stochastic... 
      needs more reading...

    - Support for virtual channels!

    - Some 8-bit background music during execution of the program would be
      really cool

    - Implement Memory Usage Profiler

